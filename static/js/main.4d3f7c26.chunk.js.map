{"version":3,"sources":["components/Chart.jsx","components/Charts.jsx","hooks/useDarkMode.js","hooks/useLocalStorage.js","components/Navbar.jsx","index.js"],"names":["Chart","_ref","sparklineData","formattedData","map","price","idx","timeToSubtract","value","date","moment","subtract","format","length","filter","data","react_default","a","createElement","es6","width","height","type","dataKey","stroke","strokeDasharray","interval","domain","allowDecimals","Charts","coinData","numberWithCommas","x","toString","replace","className","coin","key","name","src","image","alt","symbol","components_Chart","sparkline_in_7d","current_price","circulating_supply","low_24h","high_24h","market_cap","total_supply","ath","y","ath_date","Date","toLocaleString","useDarkMode","_useLocalStorage","initialValue","_useState","useState","item","window","localStorage","getItem","JSON","parse","_useState2","Object","slicedToArray","storedValue","setStoredValue","setItem","stringify","useLocalStorage","_useLocalStorage2","setValue","useEffect","document","querySelector","classList","add","remove","Navbar","_useDarkMode","_useDarkMode2","darkMode","setDarkMode","onClick","e","preventDefault","rootElement","getElementById","ReactDOM","render","setCoinData","axios","get","then","res","catch","err","console","log","components_Navbar","components_Charts"],"mappings":"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","file":"static/js/main.4d3f7c26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip\r\n} from \"recharts\";\r\n\r\nconst Chart = ({ sparklineData }) => {\r\n  const formattedData = sparklineData\r\n    .map((price, idx) => {\r\n      if (idx % 6 === 0) {\r\n        const timeToSubtract = 168 - idx;\r\n        const date = moment()\r\n          .subtract(timeToSubtract, \"hours\")\r\n          .format(\"ddd h:mma\");\r\n        return { value: price, date };\r\n      } else if (idx === sparklineData.length - 1) {\r\n        const date = moment().format(\"ddd h:mma\");\r\n        return { value: price, date };\r\n      }\r\n      return null;\r\n    })\r\n    .filter(data => data);\r\n\r\n  return (\r\n    <LineChart width={1100} height={300} data={formattedData}  >\r\n      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n      <XAxis dataKey=\"date\" interval={3}/>\r\n      <YAxis  domain={['dataMin', 'auto']} allowDecimals={false}/>\r\n      <Tooltip />\r\n    </LineChart>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"./Chart\";\r\n\r\nconst Charts = ({ coinData }) => {\r\n  function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n  function date(y) {\r\n    return new Date(y).toLocaleString();\r\n  }\r\n\r\n  return (\r\n    <div className=\"charts\">\r\n      {coinData.map(coin => (\r\n        <div className=\"chart__container\" key={coin.name}>\r\n          <div className='chart_title'>\r\n            <div className=\"coin__logo\">\r\n              <img src={coin.image} height=\"40\" alt={coin.name} />\r\n            </div>\r\n            <h2 className=\"coin__title\">{coin.name} ({coin.symbol})</h2>\r\n          </div>\r\n          <Chart sparklineData={coin.sparkline_in_7d.price} />\r\n          <div className='stats'>\r\n            <p className='info'>{coin.name} Price: ${coin.current_price}</p>\r\n            <p className='info'>Circulating Supply: {numberWithCommas(coin.circulating_supply)}</p>\r\n            <p className='info'>24h Low/24h High: ${coin.low_24h}/${coin.high_24h}</p>\r\n            <p className='info'>Market Cap: ${numberWithCommas(coin.market_cap)}</p>\r\n            <p className='info'>Total Supply: {coin.total_supply}</p>\r\n            <p className='info'>All time high: ${numberWithCommas(coin.ath)} on {date(coin.ath_date)}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Charts;\r\n","import {useEffect} from 'react';\r\nimport {useLocalStorage} from './useLocalStorage';\r\n\r\nexport const useDarkMode = () => {\r\n    const [value, setValue] = useLocalStorage('dark');\r\n\r\n    useEffect(() => {\r\n        if (value === true) {\r\n            document.querySelector('body').classList.add(\"dark-mode\");\r\n        } else {   \r\n            document.querySelector('body').classList.remove('dark-mode');\r\n        }\r\n    },[value])\r\n\r\n    return([value, setValue])\r\n}","import {useState} from 'react';\r\n\r\nexport const useLocalStorage = (key, initialValue) => {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        const item = window.localStorage.getItem(key);\r\n        return item ? JSON.parse(item) : initialValue;\r\n    });\r\n\r\n    const setValue = value => {\r\n        setStoredValue(value);\r\n        window.localStorage.setItem(key, JSON.stringify(value));\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n}\r\n","import React from 'react';\r\nimport {useDarkMode} from '../hooks/useDarkMode';\r\n\r\nconst Navbar = () => {\r\n  const [darkMode, setDarkMode] = useDarkMode(false);\r\n  const toggleMode = e => {\r\n    e.preventDefault();\r\n    setDarkMode(!darkMode);\r\n  };\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>Crypto Tracker</h1>\r\n      <div className=\"dark-mode__toggle\">\r\n        <div\r\n          onClick={toggleMode}\r\n          className={darkMode ? 'toggle toggled' : 'toggle'}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Charts from \"./components/Charts\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst App = () => {\r\n  const [coinData, setCoinData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true\"\r\n      )\r\n      .then(res => setCoinData(res.data))\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n  console.log(coinData)\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Charts coinData={coinData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}